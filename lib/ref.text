import 'dart:async';
import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
        useMaterial3: true,
      ),
      home: MyHome(),
    );
  }
}

class MyHome extends StatefulWidget {
  const MyHome({Key? key}) : super(key: key);

  @override
  State<MyHome> createState() => _MyHomeState();
}

class _MyHomeState extends State<MyHome> {
  Timer? timer;
  int seconds = 40;
  int minutes = 59;
  int hours = 0;

  @override
  Widget build(BuildContext context) {
    var screenWidth = MediaQuery.of(context).size.width;

    return Scaffold(
      body: Container(
        child: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Stack(
                children: [
                  SizedBox(
                    height: 300,
                    width: 300,
                    child: CircularProgressIndicator(
                      value: seconds == 0 ? 0 : seconds / 60,
                      strokeWidth: 20,
                    ),
                  ),
                  Positioned(
                    bottom: 110,
                    left: 60,
                    child: Text(
                      '${hours <= 9 ? '0$hours' : hours}:${minutes <= 9 ? '0$minutes' : minutes}:${seconds <= 9 ? '0$seconds' : seconds}',
                      style: TextStyle(fontSize: 50),
                    ),
                  ),
                ],
              ),
              SizedBox(
                height: 50,
              ),
              Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  ElevatedButton(
                    onPressed: () {
                      timer = Timer.periodic(Duration(seconds: 1), (timer) {
                        int secondsref = (seconds + 1) % 60;
                        int minutesref = minutes;
                        int hoursref = hours;

                        if (secondsref == 0) {
                          minutesref = (minutes + 1) % 60;
                        }

                        if (minutes == 59 && seconds == 59) {
                          hoursref = (hours + 1) % 24;
                        }

                        setState(() {
                          seconds = secondsref;
                          minutes = minutesref;
                          hours = hoursref;
                        });
                      });
                    },
                    child: Text('Start'),
                  ),
                  SizedBox(
                    width: 30,
                  ),
                  ElevatedButton(
                      onPressed: () {
                        timer!.cancel();
                      },
                      child: Text('Stop'))
                ],
              ),
            ],
          ),
        ),
      ),
    );
  }

  @override
  void dispose() {
    timer?.cancel();
    super.dispose();
  }
}
